<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ubuntu docker redmine 安装]]></title>
    <url>%2F2019%2F02%2F14%2Fredmine-setup%2F</url>
    <content type="text"><![CDATA[ubuntu docker redmine &#x5B89;&#x88C5; &#x5B89;&#x88C5;docker 1sudo apt-get install docker docker.io mysql&#x914D;&#x7F6E;&#x6587;&#x4EF6; my.cnf 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889# Example MySQL config file for small systems.## This is for a system with little memory (&lt;= 64M) where MySQL is only used# from time to time and it&apos;s important that the mysqld daemon# doesn&apos;t use much resources.## MySQL programs look for option files in a set of# locations which depend on the deployment platform.# You can copy this option file to one of those# locations. For information about these locations, see:# http://dev.mysql.com/doc/mysql/en/option-files.html## In this file, you can use all long options that a program supports.# If you want to know which options a program supports, run the program# with the &quot;--help&quot; option.# The following options will be passed to all MySQL clients[client]#password = your_passwordport = 3306socket = /var/run/mysqld/mysqld.sock# Here follows entries for some specific programs# The MySQL server[mysqld]port = 3306socket = /var/run/mysqld/mysqld.sockskip-external-lockingkey_buffer_size = 16Kmax_allowed_packet = 1Mtable_open_cache = 4sort_buffer_size = 64Kread_buffer_size = 256Kread_rnd_buffer_size = 256Knet_buffer_length = 2Kthread_stack = 128K# Don&apos;t listen on a TCP/IP port at all. This can be a security enhancement,# if all processes that need to connect to mysqld run on the same host.# All interaction with mysqld must be made via Unix sockets or named pipes.# Note that using this option without enabling named pipes on Windows# (using the &quot;enable-named-pipe&quot; option) will render mysqld useless!# #skip-networkingserver-id = 1# Uncomment the following if you want to log updates#log-bin=mysql-bin# binary logging format - mixed recommended#binlog_format=mixed# Causes updates to non-transactional engines using statement format to be# written directly to binary log. Before using this option make sure that# there are no dependencies between transactional and non-transactional# tables such as in the statement INSERT INTO t_myisam SELECT * FROM# t_innodb; otherwise, slaves may diverge from the master.#binlog_direct_non_transactional_updates=TRUE# Uncomment the following if you are using InnoDB tables#innodb_data_home_dir = /var/lib/mysql#innodb_data_file_path = ibdata1:10M:autoextend#innodb_log_group_home_dir = /var/lib/mysql# You can set .._buffer_pool_size up to 50 - 80 %# of RAM but beware of setting memory usage too high#innodb_buffer_pool_size = 16M#innodb_additional_mem_pool_size = 2M# Set .._log_file_size to 25 % of buffer pool size#innodb_log_file_size = 5M#innodb_log_buffer_size = 8M#innodb_flush_log_at_trx_commit = 1#innodb_lock_wait_timeout = 50[mysqldump]quickmax_allowed_packet = 16M[mysql]no-auto-rehash# Remove the next comment character if you are not familiar with SQL#safe-updates[myisamchk]key_buffer_size = 8Msort_buffer_size = 8M[mysqlhotcopy]interactive-timeout &#x5B89;&#x88C5;&#x8FD0;&#x884C;mysql 123456789101112131415#sudo docker search mysqlsudo docker pull mysql#&#x6620;&#x5C04;my.cnf&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x548C;&#x6570;&#x636E;&#x76EE;&#x5F55;sudo docker run --restart=always -d -p 3306:3306 -v /data/mysql/conf/my.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf -v /data/mysql/data:/var/lib/mysql --name mysql -e MYSQL_ROOT_PASSWORD=&quot;pass&quot; mysql#&#x8FD0;&#x884C;&#x540E;&#x5F97;&#x5230;id &quot;546badd171321e920bce7793748cdda6cc6489ebb24e2d51db5312a568b95e04&quot;sudo docker exec -it 54 /bin/shmysql -u root -p#&#x8F93;&#x5165;&#x5BC6;&#x7801; pass &#x767B;&#x5F55;mysqluse mysqlalter user &apos;root&apos; @&apos;localhost&apos; identified with mysql_native_password by &apos;pass&apos;;alter user &apos;root&apos; @&apos;%&apos; identified with mysql_native_password by &apos;pass&apos;;#&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;CREATE DATABASE IF NOT EXISTS redmine default charset utf8 COLLATE utf8_general_ci;#&#x9000;&#x51FA;ctrl+d redmine&#x914D;&#x7F6E;&#x6587;&#x4EF6; configuration.yml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227 # = Redmine configuration file## Each environment has it&apos;s own configuration options. If you are only# running in production, only the production block needs to be configured.# Environment specific configuration options override the default ones.## Note that this file needs to be a valid YAML file.# DO NOT USE TABS! Use 2 spaces instead of tabs for identation.# default configuration options for all environmentsdefault: # Outgoing emails configuration # See the examples below and the Rails guide for more configuration options: # http://guides.rubyonrails.org/action_mailer_basics.html#action-mailer-configuration #email_delivery: # ==== Simple SMTP server at localhost # email_delivery: delivery_method: :smtp smtp_settings: ssl: true address: &quot;smtp.qq.com&quot; port: 465 authentication: :login domain: &apos;qq.com&apos; user_name: &apos;xxxxxx@qq.com&apos; password: &apos;xxxxxxxx&apos; # openssl_verify_mode: &apos;none&apos; # # ==== SMTP server at example.com using LOGIN authentication and checking HELO for foo.com # # email_delivery: # delivery_method: :smtp # smtp_settings: # address: &quot;example.com&quot; # port: 25 # authentication: :login # domain: &apos;foo.com&apos; # user_name: &apos;myaccount&apos; # password: &apos;password&apos; # # ==== SMTP server at example.com using PLAIN authentication # # email_delivery: # delivery_method: :smtp # smtp_settings: # address: &quot;example.com&quot; # port: 25 # authentication: :plain # domain: &apos;example.com&apos; # user_name: &apos;myaccount&apos; # password: &apos;password&apos; # # ==== SMTP server at using TLS (GMail) # This might require some additional configuration. See the guides at: # http://www.redmine.org/projects/redmine/wiki/EmailConfiguration # # email_delivery: # delivery_method: :smtp # smtp_settings: # enable_starttls_auto: true # address: &quot;smtp.gmail.com&quot; # port: 587 # domain: &quot;smtp.gmail.com&quot; # &apos;your.domain.com&apos; for GoogleApps # authentication: :plain # user_name: &quot;your_email@gmail.com&quot; # password: &quot;your_password&quot; # # ==== Sendmail command # # email_delivery: # delivery_method: :sendmail # Absolute path to the directory where attachments are stored. # The default is the &apos;files&apos; directory in your Redmine instance. # Your Redmine instance needs to have write permission on this # directory. # Examples: # attachments_storage_path: /var/redmine/files # attachments_storage_path: D:/redmine/files attachments_storage_path: /usr/src/redmine/files # Configuration of the autologin cookie. # autologin_cookie_name: the name of the cookie (default: autologin) # autologin_cookie_path: the cookie path (default: /) # autologin_cookie_secure: true sets the cookie secure flag (default: false) autologin_cookie_name: autologin_cookie_path: autologin_cookie_secure: # Configuration of SCM executable command. # # Absolute path (e.g. /usr/local/bin/hg) or command name (e.g. hg.exe, bzr.exe) # On Windows + CRuby, *.cmd, *.bat (e.g. hg.cmd, bzr.bat) does not work. # # On Windows + JRuby 1.6.2, path which contains spaces does not work. # For example, &quot;C:\Program Files\TortoiseHg\hg.exe&quot;. # If you want to this feature, you need to install to the path which does not contains spaces. # For example, &quot;C:\TortoiseHg\hg.exe&quot;. # # Examples: # scm_subversion_command: svn # (default: svn) # scm_mercurial_command: C:\Program Files\TortoiseHg\hg.exe # (default: hg) # scm_git_command: /usr/local/bin/git # (default: git) # scm_cvs_command: cvs # (default: cvs) # scm_bazaar_command: bzr.exe # (default: bzr) # scm_darcs_command: darcs-1.0.9-i386-linux # (default: darcs) # scm_subversion_command: scm_mercurial_command: scm_git_command: scm_cvs_command: scm_bazaar_command: scm_darcs_command: # SCM paths validation. # # You can configure a regular expression for each SCM that will be used to # validate the path of new repositories (eg. path entered by users with the # &quot;Manage repositories&quot; permission and path returned by reposman.rb). # The regexp will be wrapped with \A \z, so it must match the whole path. # And the regexp is case sensitive. # # You can match the project identifier by using %project% in the regexp. # # You can also set a custom hint message for each SCM that will be displayed # on the repository form instead of the default one. # # Examples: # scm_subversion_path_regexp: file:///svnpath/[a-z0-9_]+ # scm_subversion_path_info: SVN URL (eg. file:///svnpath/foo) # # scm_git_path_regexp: /gitpath/%project%(\.[a-z0-9_])?/ # scm_subversion_path_regexp: scm_mercurial_path_regexp: scm_git_path_regexp: scm_cvs_path_regexp: scm_bazaar_path_regexp: scm_darcs_path_regexp: scm_filesystem_path_regexp: # Absolute path to the SCM commands errors (stderr) log file. # The default is to log in the &apos;log&apos; directory of your Redmine instance. # Example: # scm_stderr_log_file: /var/log/redmine_scm_stderr.log scm_stderr_log_file: # Key used to encrypt sensitive data in the database (SCM and LDAP passwords). # If you don&apos;t want to enable data encryption, just leave it blank. # WARNING: losing/changing this key will make encrypted data unreadable. # # If you want to encrypt existing passwords in your database: # * set the cipher key here in your configuration file # * encrypt data using &apos;rake db:encrypt RAILS_ENV=production&apos; # # If you have encrypted data and want to change this key, you have to: # * decrypt data using &apos;rake db:decrypt RAILS_ENV=production&apos; first # * change the cipher key here in your configuration file # * encrypt data using &apos;rake db:encrypt RAILS_ENV=production&apos; database_cipher_key: # Set this to false to disable plugins&apos; assets mirroring on startup. # You can use `rake redmine:plugins:assets` to manually mirror assets # to public/plugin_assets when you install/upgrade a Redmine plugin. # #mirror_plugins_assets_on_startup: false # Your secret key for verifying cookie session data integrity. If you # change this key, all old sessions will become invalid! Make sure the # secret is at least 30 characters and all random, no regular words or # you&apos;ll be exposed to dictionary attacks. # # If you have a load-balancing Redmine cluster, you have to use the # same secret token on each machine. #secret_token: &apos;change it to a long random string&apos; # Requires users to re-enter their password for sensitive actions (editing # of account data, project memberships, application settings, user, group, # role, auth source management and project deletion). Disabled by default. # Timeout is set in minutes. # #sudo_mode: true #sudo_mode_timeout: 15 # Absolute path (e.g. /usr/bin/convert, c:/im/convert.exe) to # the ImageMagick&apos;s `convert` binary. Used to generate attachment thumbnails. #imagemagick_convert_command: # Configuration of RMagick font. # # Redmine uses RMagick in order to export gantt png. # You don&apos;t need this setting if you don&apos;t install RMagick. # # In CJK (Chinese, Japanese and Korean), # in order to show CJK characters correctly, # you need to set this configuration. # # Because there is no standard font across platforms in CJK, # you need to set a font installed in your server. # # This setting is not necessary in non CJK. # # Examples for Japanese: # Windows: # rmagick_font_path: C:\windows\fonts\msgothic.ttc # Linux: # rmagick_font_path: /usr/share/fonts/ipa-mincho/ipam.ttf # rmagick_font_path: # Maximum number of simultaneous AJAX uploads #max_concurrent_ajax_uploads: 2 # Configure OpenIdAuthentication.store # # allowed values: :memory, :file, :memcache #openid_authentication_store: :memory# specific configuration options for production environment# that overrides the default onesproduction:# specific configuration options for development environment# that overrides the default onesdevelopment: &#x5B89;&#x88C5;redmine 1234#sudo docker search redminesudo docker pull redmine #&#x6620;&#x5C04;configuration.yml&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x548C;&#x6570;&#x636E;&#x76EE;&#x5F55;&#xFF0C;&#x6B64;&#x6587;&#x4EF6;&#x4E2D;&#x5305;&#x542B;&#x90AE;&#x7BB1;&#x914D;&#x7F6E;sudo docker run --restart=always -d -p 80:3000 --name=redmine -e MYSQL_ROOT_PASSWORD=&quot;pass&quot; --link mysql:mysql -v /data/redmine/data/files:/usr/src/redmine/files -v /data/redmine/config/configuration.yml:/usr/src/redmine/config/configuration.yml -v /data/redmine/plugins:/usr/src/redmine/plugins redmine]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>redmine</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HEXO博客搭建]]></title>
    <url>%2F2019%2F02%2F11%2Fhexo-setup%2F</url>
    <content type="text"><![CDATA[ubuntu 16.04 lts &#x53C2;&#x8003;&#x7F51;&#x5740; Ubuntu&#x4E0A;&#x7528;Hexo&#x642D;&#x5EFA;&#x535A;&#x5BA2;&#x6258;&#x7BA1;&#x5230;github Hexo&#x7684;Next&#x4E3B;&#x9898;&#x8BE6;&#x7EC6;&#x914D;&#x7F6E; install nodejs 1sudo apt-get remove node* #&#x5378;&#x8F7D;&#x73B0;&#x6709;&#x7684;nodejs &#x7B49;&#x8F6F;&#x4EF6;&#x5305; curl -sL https://deb.nodesource.com/setup_8.x | sudo bash - #&#x6DFB;&#x52A0;nodejs&#x6E90; sudo apt-get install -y nodejs #&#x5B89;&#x88C5;nodejs #sudo apt-get install nodejs-legacy #ubuntu 1404 &#x6CA1;&#x6709;&#x7528; #sudo apt-get install npm #ubuntu 1404 &#x8FD8;&#x9700;&#x8981;&#x5B89;&#x88C5;&#x8FD9;&#x4E2A; &#x6CA1;&#x6709;&#x7528; #&#x5982;&#x679C;&#x5B58;&#x5728;&#x95EE;&#x9898;Error: Cannot find module &apos;are-we-there-yet&apos; cd /usr/local/lib/node_modules sudo curl -L https://www.npmjs.com/install.sh | sudo sh sudo ln -s /usr/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm &#x66F4;&#x65B0;npm&#x6E90;&#x548C;&#x66F4;&#x65B0;npm 1#&#x4E34;&#x65F6; npm --registry https://registry.npm.taobao.org install express #&#x6C38;&#x4E45; npm config set registry https://registry.npm.taobao.org #&#x914D;&#x7F6E;&#x540E;&#x53EF;&#x901A;&#x8FC7;&#x4E0B;&#x9762;&#x65B9;&#x5F0F;&#x6765;&#x9A8C;&#x8BC1;&#x662F;&#x5426;&#x6210;&#x529F; cat ~/.npmrc npm config get registry npm info express #&#x66F4;&#x65B0;npm npm install npm -g #&#x5982;&#x679C;&#x5B58;&#x5728;&#x95EE;&#x9898; npm ERR! enoent ENOENT: no such file or directory, access &apos;/usr/local/lib/node_modules/npm/node_modules/ansi-regex&apos; &#x6216;&#x8005;i&#x5176;&#x4ED6;&#x7684;module #install &#x76F8;&#x5E94;&#x7684;module npm install ansi-regex install hexo 1sudo npm install -g hexo #let notifier = require(&apos;update-notifier&apos;)({pkg}) &#x5982;&#x679C;&#x6709;&#x8FD9;&#x79CD;&#x9519;&#x8BEF;&#xFF0C;&#x518D;&#x6B21;&#x91CD;&#x590D;&#x4E0A;&#x4E00;&#x6B65;&#x9AA4;&#x66F4;&#x65B0;npm&#x7B49; initial hexo 1hexo init blog #&#x5982;&#x679C;&#x5B58;&#x5728;.npm/&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x9762;&#x7684;&#x6743;&#x9650;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x6574;&#x4E2A;&#x76EE;&#x5F55;&#x5220;&#x9664;&#xFF0C;&#x5F88;&#x66B4;&#x529B; &#x5B89;&#x88C5;&#x4E3B;&#x9898; 1hexo clean git clone https://github.com/iissnan/hexo-theme-next themes/next # &#x4FEE;&#x6539;Hexo&#x76EE;&#x5F55;&#x4E0B;&#x7684;_config.yml&#xFF0C;&#x5728;theme&#x5C5E;&#x6027;&#x4E0A;&#xFF0C;&#x5C06;&#x5176;&#x8BBE;&#x7F6E;&#x4E3A;next,&#x9ED8;&#x8BA4;&#x662F;landscape &#x542F;&#x52A8;&#x670D;&#x52A1; 1$ cd themes/next $ git pull $ hexo g $ hexo s &#x5B89;&#x88C5;&#x5176;&#x4ED6;&#x529F;&#x80FD; 1#deploy npm install hexo-deployer-git --save #image&#x663E;&#x793A; npm install https://github.com/CodeFalling/hexo-asset-image --save next&#x4E3B;&#x9898;&#x4FEE;&#x6539; 1#&#x5B98;&#x7F51; http://theme-next.iissnan.com/getting-started.html #&#x53C2;&#x8003;&#x7F51;&#x5740; https://blog.csdn.net/qq_33699981/article/details/72716951 spacemacs emacs &#x96C6;&#x6210;&#x7BA1;&#x7406; &#x5B89;&#x88C5; 1#&#x53C2;&#x8003;&#x7F51;&#x5740; https://github.com/kuanyui/hexo.el #&#x9700;&#x8981;npm&#x5B89;&#x88C5; hexo-org-render https://github.com/coldnew/hexo-renderer-org npm install https://github.com/coldnew/hexo-renderer-org mkdir ~/github/blog/source/_drafts .spacemacs&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x4FEE;&#x6539; 12345;; List of additional packages that will be installed without being;; wrapped in a layer. If you need some configuration for these;; packages, then consider creating a layer. You can also put the;; configuration in `dotspacemacs/user-config&apos;.dotspacemacs-additional-packages &apos;(htmlize hexo) ;;&#x6DFB;&#x52A0; hexo &#x4FEE;&#x6539;layer&#x91CC;&#x9762;packages.el 12345678910111213141516171819(defconst eric-packages &apos;(hexo) ) (defun eric/init-hexo () (use-package hexo :defer t :init ;; (add-to-list &apos;auto-mode-alist `(&quot;\\.h$&quot; . ,c-c++-default-mode-for-headers)) :config (progn (require &apos;hexo) (setq hexo-new-format &apos;org) ) )) (defun eric/hexo-my-blog () (interactive) (hexo &quot;~/github/blog/&quot;)) &#x56FE;&#x7247;&#x663E;&#x793A; &#x4FEE;&#x6539; _config.yml 1npm install https://github.com/CodeFalling/hexo-asset-image --save 1#&#x4FEE;&#x6539;_config.yml&#x914D;&#x7F6E;&#x6587;&#x4EF6;post_asset_folder&#x9879;&#x4E3A;true post_asset_folder:true &#x641C;&#x7D22;&#x529F;&#x80FD; &#x5B89;&#x88C5; 1npm install hexo-generator-searchdb --save &#x4FEE;&#x6539; &#x7AD9;&#x70B9;&#x914D;&#x7F6E; &#x6587;&#x4EF6; 1search: path: search.xml field: post format: html limit: 10000 &#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6; theme/next/_config.yml 1local_search: enable: true &#x8BC4;&#x8BBA;&#x529F;&#x80FD; &#x5728;&#x6765;&#x5FC5;&#x529B;&#x7684;&#x5B98;&#x7F51;&#x4E0A;&#x6CE8;&#x518C;&#x8D26;&#x53F7;&#x3002; &#x5728;&#x6B64;&#x5904;&#x83B7;&#x53D6;data-uid &#x6253;&#x5F00;NexT&#x4E3B;&#x9898;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;_config.yml&#x4E2D;&#xFF0C;&#x641C;&#x7D22;livere_uid&#xFF0C;&#x5C06;livere_uid&#x524D;&#x9762;&#x7684;#&#x53F7;&#x53BB;&#x6389;&#xFF0C;&#x5C06;id&#x586B;&#x5199;&#x5230;livere_uid:&#x540E;&#x9762;&#x3002; &#x80CC;&#x666F;&#x56FE; &#x7ED9; hexo next &#x52A0;&#x4E0A;&#x80CC;&#x666F;&#x56FE;&#x7247;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5728; themes\next\source\css_custom\custom.styl &#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#xFF1A; 1234567body { background:url(/uploads/background.jpg); background-repeat: no-repeat; background-attachment:fixed; background-position:10% 10%; background-size:cover;}]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Espeak嵌入式移植]]></title>
    <url>%2F2019%2F01%2F28%2FEspeak%2F</url>
    <content type="text"><![CDATA[espeak PC&#x7248;&#x672C;&#x7F16;&#x8BD1;&#x914D;&#x7F6E; &#x4ECB;&#x7ECD; eSpeak is a compact open source software speech synthesizer for English and other languages, for Linux and Windows. http://espeak.sourceforge.net eSpeak uses a &quot;formant synthesis&quot; method. This allows many languages to be provided in a small size. The speech is clear, and can be used at high speeds, but is not as natural or smooth as larger synthesizers which are based on human speech recordings. espeakedit is a GUI program used to prepare and compile phoneme data. It is now available for download. Documentation is currently sparse, but if you want to use it to add or improve language support, let me know. &#x5B98;&#x65B9;&#x4ECB;&#x7ECD; &#x53C2;&#x8003; http://espeak.sourceforge.net/ http://www.uedsc.com/espeak-editor.html https://datahunter.org/espeak &#x4F9D;&#x8D56;&#x5305; espeak-1.48.04 espeakedit-1.48.03 pa_stable_v190600_20161030.tgz //portaudio 19 arm&#x7248;&#x672C;&#x9700;&#x8981; pc&#x7248;&#x672C;&#x4E0D;&#x7528; &#x7F16;&#x8BD1;PC&#x7248;&#x672C;espeak &#x4E0B;&#x8F7D;&#x6E90;&#x7801;&#x5305; espeak&#x4E0B;&#x8F7D;&#x5730;&#x5740; - espeak-1.48.04 &#x4E2D;&#x6587;&#x6570;&#x636E;&#x5305;&#x4E0B;&#x8F7D;&#x5730;&#x5740; - zh_listx.zip &#x7F16;&#x8BD1; &#x4FEE;&#x6539;Makefile 1234cd espeak-1.48.04-source/src#&#x4F7F;&#x7528;&#x7684;&#x662F;19&#x7248;&#x672C;&#x7684;portaudio&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;18&#x7248;&#x672C;&#xFF0C;&#x7F16;&#x8BD1;&#x94FE;&#x63A5;&#x65F6;&#xFF0C;&#x4F1A;&#x627E;&#x4E0D;&#x5230;Pa_IsStreamActive&#x7B49;&#x51FD;&#x6570;&#x5B9A;&#x4E49;cp portaudio19.h portaudio.h emacsclient Makefile &#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;PC&#x673A;&#x7684;&#x73AF;&#x5883;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;audio&#x5E93; 1234567# &apos;runtime&apos; uses pulseaudio if it is running, else uses portaudio#AUDIO = runtime#AUDIO = portaudio#AUDIO = portaudio0#AUDIO = portaudio2AUDIO = pulseaudio#AUDIO = sada &#x7F16;&#x8BD1; 1234567makecp espeak-1.48.04-source/espeak-data ~/ #&#x62F7;&#x8D1D;&#x6570;&#x636E;&#x6587;&#x4EF6;&#x5230;&#x7528;&#x6237;home&#x76EE;&#x5F55;espeak-1.48.04-source/src/espeak -vzh+f2 &quot;eric&#xFF0C;&#x4F60;&#x597D;&#x3002;&#x6211;&#x662F;&#x5C0F;E&quot; #-vzh &#x9ED8;&#x8BA4;&#x7537;&#x58F0; -vzh+f2&#x5973;&#x751F; &#x8BE6;&#x7EC6;&#x7684;&#x7684;&#x58F0;&#x97F3;&#x652F;&#x6301;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x76EE;&#x5F55;eric@: ~/espeak-data/voices/!v$ lscroak f1 f2 f3 f4 f5 klatt klatt2 klatt3 klatt4 m1 m2 m3 m4 m5 m6 m7 whisper whisperf &#x6DFB;&#x52A0;&#x5B8C;&#x6574;&#x7684;&#x4E2D;&#x6587;&#x652F;&#x6301; 123456unzip zh_listx.zipcp zh_listx espeak-1.48.04-source/dictsourceespeak-1.48.04-source/src/espeak -compile=zh#&#x53EF;&#x4EE5;&#x5BF9;&#x6BD4;&#x67E5;&#x770B;&#x524D;&#x540E;&#x7684;zh_dict&#x6587;&#x4EF6;&#x5927;&#x5C0F;ls -l ~/espeak-data | grep zh_-rw-r--r-- 1 eric eric 1066907 1&#x6708; 23 10:21 zh_dict &#x7F16;&#x8BD1;PC&#x7248;&#x672C;espeakedit &#x4E0B;&#x8F7D;&#x6E90;&#x7801;&#x5305; espeakedit&#x4E0B;&#x8F7D;&#x5730;&#x5740; - espeakedit-1.48.03 &#x7F16;&#x8BD1; &#x4FEE;&#x6539;Makefile &#x4FEE;&#x6539;LIBS&#x9700;&#x8981;&#x4FEE;&#x6539;&#x6210;&#x5408;&#x9002;&#x7684;&#x97F3;&#x9891;&#x5E93;&#xFF0C;&#x4EE3;&#x7801;&#x4E2D;&#x4F7F;&#x7528;&#x7684;-lportaudio &#x5982;&#x679C;&#x5B58;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x51FA;&#x73B0;ABI&#x7248;&#x672C;&#x95EE;&#x9898; &#x5728;CPPFLAGS&#x4E2D;&#x6DFB;&#x52A0; -fabi-version=2 123456#LIBS=-lstdc++ -lpulse#LIBS=-lstdc++ -lportaudio#LIBS=-lstdc++ /usr/lib/x86_64-linux-gnu/libportaudio.so.2LIBS=-lstdc++ -lasound -lrt -lasound -lm -lpthread -lportaudio#/home/eric/workspace/portaudio/X64/lib/libportaudio.a -lrt -lasound -lm -lpthreadCPPFLAGS = -fabi-version=2 -Wall -g -fexceptions `wx-config --cflags` &#x7F16;&#x8BD1; 1#&#x4F7F;&#x7528;&#x7684;&#x662F;19&#x7248;&#x672C;&#x7684;portaudio&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;18&#x7248;&#x672C;&#xFF0C;&#x7F16;&#x8BD1;&#x94FE;&#x63A5;&#x65F6;&#xFF0C;&#x4F1A;&#x627E;&#x4E0D;&#x5230;Pa_IsStreamActive&#x7B49;&#x51FD;&#x6570;&#x5B9A;&#x4E49; cp portaudio19.h portaudio.h &#x79FB;&#x690D;espeak portaudio&#x79FB;&#x690D; &#x5B98;&#x65B9;&#x7F51;&#x7AD9; &#x4E0B;&#x8F7D; pa_stable_v190600_20161030.tgz&#x5E76;&#x89E3;&#x538B; &#x7F16;&#x8BD1; 1cd portaudio ./configure --preifx=$PWD/BUILD_ARM --host=arm-linux CC=arm-hisiv500-linux-gcc CXX=arm-hisiv500-linux-g++ make ; make install epseak&#x79FB;&#x690D; &#x4FEE;&#x6539;Makefile 1cd espeak-1.48.04-source/src #&#x4F7F;&#x7528;&#x7684;&#x662F;19&#x7248;&#x672C;&#x7684;portaudio&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;18&#x7248;&#x672C;&#xFF0C;&#x7F16;&#x8BD1;&#x94FE;&#x63A5;&#x65F6;&#xFF0C;&#x4F1A;&#x627E;&#x4E0D;&#x5230;Pa_IsStreamActive&#x7B49;&#x51FD;&#x6570;&#x5B9A;&#x4E49; cp portaudio19.h portaudio.h emacsclient Makefile 12345678# &#x4F7F;&#x7528;portaudio0# &apos;runtime&apos; uses pulseaudio if it is running, else uses portaudio#AUDIO = runtime#AUDIO = portaudioAUDIO = portaudio0#AUDIO = portaudio2#AUDIO = pulseaudio#AUDIO = sada &#x7F16;&#x8BD1; 123456makecp espeak-1.48.04-source/espeak-data ~/nfs #&#x62F7;&#x8D1D;&#x6570;&#x636E;&#x6587;&#x4EF6;&#x5230;arm&#x8BBE;&#x5907;cp -rdf espeak libespeak.so* ~/nfs/ ##&#x62F7;&#x8D1D;&#x5E93;&#x6587;&#x4EF6;&#x5230;arm&#x8BBE;&#x5907;espeak --path=/root/nfs/ -vzh+f2 &quot;eric&#xFF0C;&#x4F60;&#x597D;&#x3002;&#x6211;&#x662F;&#x5C0F;E&quot; #arm&#x7EC8;&#x7AEF;&#x8FD0;&#x884C;#&#x5982;&#x679C;&#x8BBE;&#x5907;&#x4E2D;&#x6CA1;&#x6709;&#x5408;&#x9002;&#x7684;audio out&#x8BBE;&#x5907;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x97F3;&#x9891;&#x6587;&#x4EF6;,&#x97F3;&#x9891;&#x6587;&#x4EF6;&#x662F; 22050Hz signed 16bit &#x683C;&#x5F0F;&#x7684;wav&#x6587;&#x4EF6;espeak --path=/root/nfs/ -w 1.wav -vzh+f2 &quot;eric&#xFF0C;&#x4F60;&#x597D;&#x3002;&#x6211;&#x662F;&#x5C0F;E&quot; #arm&#x7EC8;&#x7AEF;&#x8FD0;&#x884C; &#x97F3;&#x9891;&#x91CD;&#x91C7;&#x6837; &#x7531;&#x4E8E;espeak&#x9ED8;&#x8BA4;&#x53D1;&#x97F3;&#x97F3;&#x5143;&#x90FD;&#x662F;22050HZ_S16&#x91C7;&#x6837;&#x7387;&#x7684;&#xFF0C;&#x800C;&#x8BBE;&#x5907;&#x7AEF;&#x9ED8;&#x8BA4;&#x662F;8000_U8&#x683C;&#x5F0F;&#xFF0C;&#x9700;&#x8981;&#x505A;&#x91CD;&#x91C7;&#x6837; &#x53C2;&#x8003; https://cloud.tencent.com/developer/article/1094594 https://github.com/mackron/dr_libs/blob/master &#x4FEE;&#x6539;&#x4EE3;&#x7801; &#x53C2;&#x8003;&#x8FD9;&#x4E2A;&#x535A;&#x4E3B;&#x7684;&#x4EE3;&#x7801;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;22050HZ&#x8F6C;&#x4E3A;8000HZ&#xFF0C;&#x518D;&#x62F7;&#x8D1D;&#x4FEE;&#x6539;resampledata&#x51FD;&#x6570;&#x4E2D;&#x7684;int16&#x90E8;&#x5206;&#x7684;&#x5230;resampledata8bit&#x51FD;&#x6570; 1234567891011121314151617181920212223242526272829303132333435363738static void ResampleData8bit(const int16_t *sourceData, int32_t sampleRate, uint32_t srcSize, uint8_t *destinationData,int32_t newSampleRate){ uint32_t last_pos = srcSize - 1; uint32_t dstSize = (uint32_t) (srcSize * ((float) newSampleRate / sampleRate)); for (uint32_t idx = 0; idx &lt; dstSize; idx++) { float index = ((float) idx * sampleRate) / (newSampleRate); uint32_t p1 = (uint32_t) index; float coef = index - p1; uint32_t p2 = (p1 == last_pos) ? last_pos : p1 + 1; destinationData[idx] = (uint8_t) ((1.0f - coef) * (int32_t)sourceData[p1]*0xff/0xffff + coef * (int32_t)sourceData[p2]*0xff/0xffff); }}static void ResamplerBuffer(int16_t *inBuffer, uint32_t inSampleRate, uint32_t inSampleCount, uint32_t outSampleRate, uint8_t **outBuffer, uint32_t *outSampleCount){ if (inBuffer == NULL || inSampleRate &lt;= 0 || inSampleCount &lt;= 0|| outBuffer == NULL || outSampleCount == NULL) { LOGE(&quot;paramaters error\n&quot;); return; } *outSampleCount = (uint32_t) ((float)inSampleCount * ((float) outSampleRate / inSampleRate)); if (*outSampleCount == 0) { LOGE(&quot;outsize error %d\n&quot;); return; } *outBuffer = (uint8_t *) malloc(*outSampleCount * sizeof(uint8_t)); if (*outBuffer == NULL) { LOGE(&quot;malloc buffer failed\n&quot;); return; } ResampleData8bit(inBuffer, inSampleRate, (uint32_t) inSampleCount, *outBuffer, outSampleRate);}]]></content>
      <categories>
        <category>TTS</category>
      </categories>
      <tags>
        <tag>espeak</tag>
        <tag>audio</tag>
      </tags>
  </entry>
</search>
